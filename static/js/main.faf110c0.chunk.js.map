{"version":3,"sources":["components/Cell.js","components/Info.js","actions/sendScore.js","containers/Board.js","components/Game.js","components/Home.js","components/Rules.js","components/Highscore.js","components/Leaderboard.js","actions/fetchLeaderboard.js","components/NavBar.js","App.js","index.js","reducers/manageLeaderboard.js"],"names":["Cell","getValue","value","props","revealed","isHit","isMiss","onClick","this","className","Component","Info","handleChange","event","setState","target","clicks","boardInfo","gameWon","squidCount","remainingSquids","handleSubmit","preventDefault","state","activeButton","length","alert","entry","users","initials","sendScore","onSubmit","type","onChange","size","maxlength","connect","dispatch","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","Board","boardData","initBoardData","height","width","renderBoard","data","map","datarow","dataitem","handleCellClick","x","y","renderInfo","revealBoard","updatedData","updatedClicks","updatedSquidCount","winner","squid","i","push","j","getRandomNumber","numbers","Math","floor","random","ori","createEmptyArray","placeSquids","Game","Home","React","Rules","Highscore","id","entries","Leaderboard","componentDidMount","fetchLeaderboard","handleLoading","console","log","loading","response","payload","NavBar","to","style","paddingRight","App","exact","path","component","store","createStore","action","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faf110c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass Cell extends Component { \n  \n    getValue = () => {\n      const { value } = this.props;\n        if (!value.revealed){\n          return \"?\"\n        }\n        if (value.isHit) {\n          return \"ðŸ¦‘\";\n        }\n        if (value.isMiss) {\n          return \"ðŸ’¦\";\n        }\n        if (value.revealed){\n          return \"ðŸ’¦\";\n        }\n      }\n\n      render() {\n        let className = \"cell\"\n        return (\n          <div\n          onClick={this.props.onClick}\n          className={className}>\n            {this.getValue()} \n          </div>\n        );\n      }\n    }\n    \nexport default Cell;","import React, { Component } from 'react';\nimport { sendScore } from \"../actions/sendScore\";\nimport { connect } from 'react-redux'\n\n\nexport class Info extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    clicks: this.props.boardInfo.clicks,\n    gameWon: this.props.boardInfo.gameWon,\n    squidCount: this.props.boardInfo.remainingSquids,\n    value: '',\n    activeButton: true\n  };\n  }\n    \n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value,\n      clicks: this.props.boardInfo.clicks,\n      gameWon: this.props.boardInfo.gameWon,\n      squidCount:this.props.boardInfo.remainingSquids\n    });\n  }\n\n  handleSubmit = (event) =>  {\n    event.preventDefault();\n    if (this.props.boardInfo.gameWon === true && this.state.activeButton === true && this.state.value.length !== 0){\n      alert(\"Sailor \" + this.state.value + '!, you have a score of ' + this.props.boardInfo.clicks + ' shots!');\n      if (this.props.boardInfo.clicks < 104){\n        alert('VAIT! ' + this.props.boardInfo.clicks + '????? SAILOR ZAT BEATS ZE CAPTAINS BEST! Send a Pic to @JakeKViti on Twitter and ze captain vill congratulate you')\n      }\n      const entry =  {users: {initials: this.state.value, clicks: this.props.boardInfo.clicks}}\n      this.props.sendScore(entry)\n      this.setState({activeButton: false})\n    } else {\n      alert('Score Failed To Submit');\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Vere are {this.props.boardInfo.remainingSquids} Squids left {\"        | \"}  Shots Fired: {this.props.boardInfo.clicks} {\"        | \"}   \n        </label>\n        <label>\n          Initials: \n          <input \n            type=\"text\" \n            onChange={this.handleChange} \n            size=\"3\"\n            maxlength=\"3\"\n          />\n        </label>\n        <input \n        type=\"submit\" \n        value=\"Submit\" \n        />\n      </form>\n    );\n  } \n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendScore: (entry) => {\n      dispatch(sendScore(entry))\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Info);\n\n","export function sendScore(entry) {\n  return () => {\n    fetch(`http://localhost:3001/api/v1/users`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(entry)\n      })\n      .then(res => res.json())\n    };\n  }","import React, { Component } from 'react';\nimport Cell from '../components/Cell.js'\nimport Info from '../components/Info.js'\nclass Board extends Component {\n    state = {\n      boardData: this.initBoardData(this.props.height, this.props.width),\n      gameWon: false,\n      clicks: 0,\n      remainingSquids: 9\n    }\n    \n    createEmptyArray(height, width) {\n      let data = []\n      for (let i = 0; i < height; i++){\n        data.push([]);\n        for (let j = 0; j < width; j++) {\n          data[i][j] = {\n            x: i,\n            y: j,\n            isHit: false,\n            isMiss: false,\n            squid: false,\n            revealed: false\n          }\n        }\n      }\n      return data\n    }\n\n    placeSquids(data)  {\n      //data[0][0].squid = true;\n      //data[0][1].squid = true;\n      //data[1][0].squid = true;\n      //data[1][1].squid = true;\n      //data[1][2].squid = true;\n      //data[2][0].squid = true;\n      //data[2][1].squid = true;\n      //data[2][2].squid = true;\n      //data[2][3].squid = true;\n      this.getRandomNumber(data, 2)\n      this.getRandomNumber(data, 3)\n      this.getRandomNumber(data, 4)\n      return (data);\n    }\n\n    getRandomNumber(data, numbers) {\n      let x = Math.floor((Math.random() * 1000) + 1) % 17;\n      let y = Math.floor((Math.random() * 1000) + 1) % 17;\n      let ori = Math.floor((Math.random() * 1000) + 1) % 2;\n      if (data[x][y].squid === true){\n        this.getRandomNumber(data, numbers)\n      }\n      for (let i = 0; i < numbers; i++) {\n        if (ori === 1) {\n          data[x+i][y].squid = true\n        } else {\n          data[x][y+i].squid = true\n        }\n      } \n    }\n\n    initBoardData(height, width) {\n      let data = this.createEmptyArray(height, width);\n      data = this.placeSquids(data);\n      return data;\n    }\n\n    renderBoard = (data) =>  {\n        return data.map((datarow) => {\n          return datarow.map((dataitem) => {\n            return (\n            <div key={dataitem.x * datarow.length + dataitem.y}>\n              <Cell\n                onClick={() => this.handleCellClick(dataitem)}\n                value={dataitem}\n              />\n            </div>\n          );\n        })\n      });\n    }\n\n      renderInfo = (data) => {\n        return (\n          <div>\n            <Info\n            boardInfo={data}/>\n          </div>\n        )\n      }\n\n      revealBoard = () => {\n        let updatedData = this.state.boardData;\n        updatedData.map((datarow) => {\n          datarow.map((dataitem) => {\n            dataitem.revealed = true;\n          });\n        });\n        this.setState({\n          boardData: updatedData\n        })\n      }\n\n      handleCellClick = (data) => {\n        let updatedData = this.state.boardData;\n        let updatedClicks = this.state.clicks + 1;\n        let updatedSquidCount = this.state.remainingSquids\n        let winner = false\n        data.revealed = true\n        if (data.squid === true && data.isHit === false){\n          data.isHit = true\n          updatedSquidCount -= 1\n        }\n        if (data.squid === false){\n          data.isMiss = true\n        }\n        if (updatedSquidCount === 0){\n          alert(\"Game Over!\")\n          winner = true\n          this.revealBoard()\n        }\n        this.setState({\n          boardData: updatedData,\n          gameWon: winner,\n          clicks: updatedClicks,\n          remainingSquids: updatedSquidCount \n        });\n      }\n\n      \n\n      render() {\n        return (\n            <div className=\"board\">\n              { this.renderInfo(this.state)}\n              { this.renderBoard(this.state.boardData)}\n            </div>\n        );\n    }\n}\n\n\nexport default Board;","import React, { Component } from 'react';\nimport Board from '../containers/Board.js'\n\nclass Game extends Component {\n    state = {\n      height: 20,\n      width: 20\n    }\n\n    render() {\n      const { height, width } = this.state;\n        return (\n          <div className=\"game\">\n            <Board height={height} width={width} />\n          </div>\n        );\n      }    \n    }\n\nexport default Game;","import React from 'react';\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n            Press Play to start the game or Rules to see how to play!\n            </div>\n        );\n    }\n};\n\n","import React from 'react';\n\nexport default class Rules extends React.Component {\n    render() {\n        return (\n            \"Zere are three groups of squids: a large one, a medium one, und a small one! If vee allow zem to come any closer, zee children on zee island vill be in grave danger! Sailor! Take command of our new radar system to seek out and sink all of zese fiendishly hidden enemies! To destroy zee marauding squid pods, you must score four direct hits on zee large, three on zee medium, und two on zee small\"\n        );\n    }\n};\n\n","import React from 'react';\n  class Highscore extends React.Component {      \n      render() {\n        return (\n          <ol id=\"leaderboard\">\n            {this.props.entries.map(users => \n            <div key={users.id}>\n              <li>\n                {users.initials} with {users.clicks} shots  \n              </li>\n            </div>)}\n          </ol>\n        )\n      }\n    }\n    \n    export default Highscore;","import React from 'react';\nimport { fetchLeaderboard } from \"../actions/fetchLeaderboard\";\nimport { connect } from 'react-redux'\nimport Highscore from './Highscore.js'\n\nclass Leaderboard extends React.Component {\n\n    componentDidMount = () => {\n      this.props.fetchLeaderboard()\n    }\n\n    handleLoading = () => {\n        console.log(this.props.entries)\n        if(this.props.entries.length !== 0) {\n          return <Highscore entries={this.props.entries} />\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"highscores\">\n              <p>Sorry, If you are here from jakekviti.github.io/Sinking-Squids, Leaderboard is currently unavaliable.</p>\n              <p>While I attempt to implement it into the online verson, try to beat my personal best of 104 shots</p>\n              <h1>Top 20 Score!</h1>\n              {this.handleLoading()}\n            </div>\n          );\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n      entries: state.entries,\n      loading: state.loading\n    }\n  }\n\n\n  export default connect(mapStateToProps, { fetchLeaderboard })(Leaderboard)","export const fetchLeaderboard = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_LEADERBOARD'})\n      fetch('http://localhost:3001/api/v1/users') \n      .then(response => response.json())\n      .then(entries => dispatch({ type: 'ADD_ENTRIES', payload: entries}));\n    }\n  }","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class NavBar extends React.Component {\n    render() {\n        return (\n        <div className=\"navbar\">\n        <NavLink to=\"/Sinking-Squids/\" style={{paddingRight: '10px'}}>Home</NavLink>\n        <NavLink to=\"/Sinking-Squids/game\" style={{paddingRight: '10px'}}>Play</NavLink>\n        <NavLink to=\"/Sinking-Squids/rules\" style={{paddingRight: '10px'}}>Rules</NavLink>\n        <NavLink to=\"/Sinking-Squids/leaderboard\" >Leaderboard</NavLink>\n        </div>\n        )\n    }\n}","import './App.css';\nimport Game from './components/Game.js'\nimport Home from './components/Home.js'\nimport Rules from './components/Rules.js'\nimport Leaderboard from './components/Leaderboard.js'\nimport NavBar from './components/NavBar.js'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <NavBar />\n        <Route exact path=\"/Sinking-Squids/\" component={Home} />\n        <Route exact path=\"/Sinking-Squids/game\" component={Game} />\n        <Route exact path=\"/Sinking-Squids/rules\" component={Rules} />\n        <Route exact path=\"/Sinking-Squids/leaderboard\" component={Leaderboard} />\n      </header>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from \"react-redux\";\nimport manageLeaderboard from './reducers/manageLeaderboard'\n\nconst store = createStore( manageLeaderboard, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export default function manageLeaderboard(state = {\n  entries: [],\n  loading: false\n}, action) {\n  switch (action.type) {\n    case 'LOADING_LEADERBOARD':\n      return {\n        ...state,\n        entries: [...state.entries],\n        loading: true\n      }\n    case 'ADD_ENTRIES':\n      return {\n        ...state,\n        entries: action.payload,\n        loading: false\n      }       \n    case 'SEND_SCORE':\n      return {\n        ...state,\n        entries: action.payload\n      }\n    default:\n      return state;\n  }\n};"],"sourceRoot":""}